name: Tests and Dependabot PR Handling

on:
  pull_request:
    branches:
      - master
      - main

jobs:
  # Verifies the boilerplate can start and run in GitHub Actions environment
  test-for-workflow:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: npm install
      - name: Build Application
        run: npm run build
      - name: Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          start: npm run start
          wait-on: 'http://127.0.0.1:3000'
          wait-on-timeout: 300

  # Verifies the boilerplate can start and run in codespace environment
  test-for-codespaces:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: read
    container:
      image: ghcr.io/devskillshq/boilerplate-base-image:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install
        run: npm install
      - name: Build
        run: npm run build
      - name: Start daemon
        run: npm run start &
      - name: Extract apiUrl from cypress.json
        id: set-env
        run: |
          API_URL=$(node -pe 'let config = JSON.parse(fs.readFileSync("./cypress.json", "utf8")).env.apiUrl; config.replace("localhost", "127.0.0.1")')
          echo "API_URL=${API_URL}" >> $GITHUB_ENV
      - name: Check API_URL
        run: echo "Checking API_URL:" ${{ env.API_URL }}
      - name: List running services
        run: netstat -tuln
      - name: Wait for application to start
        run: |
          echo "Waiting for application to start..."
          while ! curl --output /dev/null --silent --head --fail ${{ env.API_URL }}; do
            printf '.'
            sleep 5
          done
      - name: Run tests
        run: npm run test

  check-dependabot:
    needs:
      - test-for-workflow
      - test-for-codespaces
    runs-on: ubuntu-20.04
    outputs:
      is_dependabot_pr: ${{ steps.dependabot-check.outputs.is_dependabot_pr }}
    steps:
      - id: dependabot-check
        name: Check if PR is from Dependabot
        run: |
          echo "PR author: ${{ github.event.pull_request.user.login }}"
          if [[ "${{ github.event.pull_request.user.login }}" == "dependabot[bot]" || "${{ github.event.pull_request.user.login }}" == "dependabot-preview[bot]" ]]; then
            echo "::set-output name=is_dependabot_pr::true"
          else
            echo "::set-output name=is_dependabot_pr::false"
          fi

  auto-merge:
    needs: check-dependabot
    runs-on: ubuntu-20.04
    if: ${{ needs.check-dependabot.outputs.is_dependabot_pr == 'true' }}
    steps:
      - name: Merge pull request
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_number = context.payload.pull_request.number;
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number
            });

      - name: Delete branch
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch_name = context.payload.pull_request.head.ref;
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/' + branch_name
            });
